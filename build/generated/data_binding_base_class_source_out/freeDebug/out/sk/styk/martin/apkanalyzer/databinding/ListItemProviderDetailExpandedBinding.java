// Generated by data binding compiler. Do not edit!
package sk.styk.martin.apkanalyzer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import net.cachapa.expandablelayout.ExpandableLayout;
import sk.styk.martin.apkanalyzer.R;
import sk.styk.martin.apkanalyzer.ui.appdetail.page.provider.AppProviderDetailListAdapter;
import sk.styk.martin.apkanalyzer.views.NewDetailListItemView;

public abstract class ListItemProviderDetailExpandedBinding extends ViewDataBinding {
  @NonNull
  public final ExpandableLayout expandableContainer;

  @NonNull
  public final NewDetailListItemView itemProviderAuthority;

  @NonNull
  public final NewDetailListItemView itemProviderExported;

  @NonNull
  public final NewDetailListItemView itemProviderReadPermission;

  @NonNull
  public final NewDetailListItemView itemProviderWritePermission;

  @Bindable
  protected AppProviderDetailListAdapter.ProviderDataViewModel mViewModel;

  protected ListItemProviderDetailExpandedBinding(Object _bindingComponent, View _root,
      int _localFieldCount, ExpandableLayout expandableContainer,
      NewDetailListItemView itemProviderAuthority, NewDetailListItemView itemProviderExported,
      NewDetailListItemView itemProviderReadPermission,
      NewDetailListItemView itemProviderWritePermission) {
    super(_bindingComponent, _root, _localFieldCount);
    this.expandableContainer = expandableContainer;
    this.itemProviderAuthority = itemProviderAuthority;
    this.itemProviderExported = itemProviderExported;
    this.itemProviderReadPermission = itemProviderReadPermission;
    this.itemProviderWritePermission = itemProviderWritePermission;
  }

  public abstract void setViewModel(
      @Nullable AppProviderDetailListAdapter.ProviderDataViewModel viewModel);

  @Nullable
  public AppProviderDetailListAdapter.ProviderDataViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ListItemProviderDetailExpandedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_provider_detail_expanded, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ListItemProviderDetailExpandedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ListItemProviderDetailExpandedBinding>inflateInternal(inflater, R.layout.list_item_provider_detail_expanded, root, attachToRoot, component);
  }

  @NonNull
  public static ListItemProviderDetailExpandedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.list_item_provider_detail_expanded, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ListItemProviderDetailExpandedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ListItemProviderDetailExpandedBinding>inflateInternal(inflater, R.layout.list_item_provider_detail_expanded, null, false, component);
  }

  public static ListItemProviderDetailExpandedBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ListItemProviderDetailExpandedBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ListItemProviderDetailExpandedBinding)bind(component, view, R.layout.list_item_provider_detail_expanded);
  }
}
