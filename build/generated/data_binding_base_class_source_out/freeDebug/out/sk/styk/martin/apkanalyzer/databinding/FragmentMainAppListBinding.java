// Generated by data binding compiler. Do not edit!
package sk.styk.martin.apkanalyzer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;
import sk.styk.martin.apkanalyzer.R;
import sk.styk.martin.apkanalyzer.ui.applist.main.MainAppListViewModel;

public abstract class FragmentMainAppListBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final CoordinatorLayout appListContainer;

  @NonNull
  public final FloatingActionButton btnAnalyzeNotInstalled;

  @NonNull
  public final ProgressBar listViewProgressBar;

  @NonNull
  public final TextView nothingToShow;

  @NonNull
  public final RecyclerView recyclerViewAppList;

  @NonNull
  public final MaterialToolbar toolbar;

  @Bindable
  protected MainAppListViewModel mViewModel;

  protected FragmentMainAppListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appBar, CoordinatorLayout appListContainer,
      FloatingActionButton btnAnalyzeNotInstalled, ProgressBar listViewProgressBar,
      TextView nothingToShow, RecyclerView recyclerViewAppList, MaterialToolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appBar = appBar;
    this.appListContainer = appListContainer;
    this.btnAnalyzeNotInstalled = btnAnalyzeNotInstalled;
    this.listViewProgressBar = listViewProgressBar;
    this.nothingToShow = nothingToShow;
    this.recyclerViewAppList = recyclerViewAppList;
    this.toolbar = toolbar;
  }

  public abstract void setViewModel(@Nullable MainAppListViewModel viewModel);

  @Nullable
  public MainAppListViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentMainAppListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main_app_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainAppListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMainAppListBinding>inflateInternal(inflater, R.layout.fragment_main_app_list, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMainAppListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main_app_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainAppListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMainAppListBinding>inflateInternal(inflater, R.layout.fragment_main_app_list, null, false, component);
  }

  public static FragmentMainAppListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMainAppListBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMainAppListBinding)bind(component, view, R.layout.fragment_main_app_list);
  }
}
