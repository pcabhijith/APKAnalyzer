// Generated by data binding compiler. Do not edit!
package sk.styk.martin.apkanalyzer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.ViewAnimator;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.Deprecated;
import java.lang.Object;
import sk.styk.martin.apkanalyzer.R;
import sk.styk.martin.apkanalyzer.ui.manifest.AndroidManifestFragmentViewModel;

public abstract class FragmentManifestBinding extends ViewDataBinding {
  @NonNull
  public final ViewAnimator animator;

  @NonNull
  public final FrameLayout codeContainer;

  @NonNull
  public final CoordinatorLayout codeCoordinator;

  @NonNull
  public final ProgressBar codeLoading;

  @NonNull
  public final TextView itemDetailError;

  @NonNull
  public final MaterialToolbar toolbar;

  @Bindable
  protected AndroidManifestFragmentViewModel mViewModel;

  protected FragmentManifestBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ViewAnimator animator, FrameLayout codeContainer, CoordinatorLayout codeCoordinator,
      ProgressBar codeLoading, TextView itemDetailError, MaterialToolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.animator = animator;
    this.codeContainer = codeContainer;
    this.codeCoordinator = codeCoordinator;
    this.codeLoading = codeLoading;
    this.itemDetailError = itemDetailError;
    this.toolbar = toolbar;
  }

  public abstract void setViewModel(@Nullable AndroidManifestFragmentViewModel viewModel);

  @Nullable
  public AndroidManifestFragmentViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentManifestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_manifest, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentManifestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentManifestBinding>inflateInternal(inflater, R.layout.fragment_manifest, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentManifestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_manifest, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentManifestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentManifestBinding>inflateInternal(inflater, R.layout.fragment_manifest, null, false, component);
  }

  public static FragmentManifestBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentManifestBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentManifestBinding)bind(component, view, R.layout.fragment_manifest);
  }
}
