// Generated by data binding compiler. Do not edit!
package sk.styk.martin.apkanalyzer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.tabs.TabLayout;
import java.lang.Deprecated;
import java.lang.Object;
import sk.styk.martin.apkanalyzer.R;
import sk.styk.martin.apkanalyzer.ui.permission.detail.pager.PermissionDetailFragmentViewModel;

public abstract class FragmentPermissionDetailBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final ViewPager pager;

  @NonNull
  public final TabLayout tabs;

  @NonNull
  public final MaterialToolbar toolbar;

  @Bindable
  protected PermissionDetailFragmentViewModel mViewModel;

  protected FragmentPermissionDetailBinding(Object _bindingComponent, View _root,
      int _localFieldCount, AppBarLayout appBar, ViewPager pager, TabLayout tabs,
      MaterialToolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appBar = appBar;
    this.pager = pager;
    this.tabs = tabs;
    this.toolbar = toolbar;
  }

  public abstract void setViewModel(@Nullable PermissionDetailFragmentViewModel viewModel);

  @Nullable
  public PermissionDetailFragmentViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentPermissionDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_permission_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPermissionDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentPermissionDetailBinding>inflateInternal(inflater, R.layout.fragment_permission_detail, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentPermissionDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_permission_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPermissionDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentPermissionDetailBinding>inflateInternal(inflater, R.layout.fragment_permission_detail, null, false, component);
  }

  public static FragmentPermissionDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentPermissionDetailBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentPermissionDetailBinding)bind(component, view, R.layout.fragment_permission_detail);
  }
}
