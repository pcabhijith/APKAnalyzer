// Generated by data binding compiler. Do not edit!
package sk.styk.martin.apkanalyzer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import java.lang.Deprecated;
import java.lang.Object;
import sk.styk.martin.apkanalyzer.R;
import sk.styk.martin.apkanalyzer.ui.premium.PremiumFragmentViewModel;

public abstract class FragmentPremiumBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final TextView premiumAppName;

  @NonNull
  public final TextView premiumDescriptionAdRemove;

  @NonNull
  public final TextView premiumDescriptionAdSupport;

  @NonNull
  public final TextView premiumDescriptionFeatures;

  @NonNull
  public final TextView premiumDescriptionHead;

  @NonNull
  public final MaterialButton premiumUpgrade;

  @NonNull
  public final MaterialToolbar toolbar;

  @Bindable
  protected PremiumFragmentViewModel mViewModel;

  protected FragmentPremiumBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appBar, TextView premiumAppName, TextView premiumDescriptionAdRemove,
      TextView premiumDescriptionAdSupport, TextView premiumDescriptionFeatures,
      TextView premiumDescriptionHead, MaterialButton premiumUpgrade, MaterialToolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appBar = appBar;
    this.premiumAppName = premiumAppName;
    this.premiumDescriptionAdRemove = premiumDescriptionAdRemove;
    this.premiumDescriptionAdSupport = premiumDescriptionAdSupport;
    this.premiumDescriptionFeatures = premiumDescriptionFeatures;
    this.premiumDescriptionHead = premiumDescriptionHead;
    this.premiumUpgrade = premiumUpgrade;
    this.toolbar = toolbar;
  }

  public abstract void setViewModel(@Nullable PremiumFragmentViewModel viewModel);

  @Nullable
  public PremiumFragmentViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentPremiumBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_premium, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPremiumBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentPremiumBinding>inflateInternal(inflater, R.layout.fragment_premium, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentPremiumBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_premium, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentPremiumBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentPremiumBinding>inflateInternal(inflater, R.layout.fragment_premium, null, false, component);
  }

  public static FragmentPremiumBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentPremiumBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentPremiumBinding)bind(component, view, R.layout.fragment_premium);
  }
}
